{"version":3,"sources":["Todo/Todo_Tasks/Todo_Tasks.module.css","Todo/Todo_Header/Header_Buttons/Header_Buttons.module.css","Todo/Root.module.css","TodoListHeader.jsx","TodoListTask.jsx","TodoListTasks.jsx","TodoListFooter.jsx","Todo/Todo_Header/Header_Buttons/Header_Buttons.jsx","Todo/Todo_Header/Todo_Header.jsx","Todo/Todo_Tasks/Todo_Task/Todo_Task.jsx","Todo/Todo_Tasks/Todo_Tasks.jsx","Todo/Root.jsx","App.jsx","serviceWorker.js","index.jsx","Todo/Todo_Tasks/Todo_Task/Todo_Task.module.css","Todo/Todo_Header/Todo_Header.module.css"],"names":["module","exports","TodoListHeader","state","error","title","onAddTaskClick","newText","setState","props","addTask","onAddTaskKeyPress","e","key","onTitleChange","currentTarget","value","render","className","onKeyPress","onChange","type","placeholder","onClick","React","Component","TodoListTask","editMode","onIsDoneChanges","changeStatus","task","id","checked","changeTitle","activeEditorMode","deactivateEditMode","currentClass","isDone","onBlur","autoFocus","priority","TodoListTasks","tasksElements","tasks","map","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","HeaderButtons","styles","header_buttons","header_buttons__item","this","Header","header","header_title","header_logo","header_logo__icon","icon","spin","size","header_logo__hide","header_logo__button","TodoTask","tasks_item","tasks_title__wrap","input_onblur","task_title","classNames","liquid","liquid_red","task_buttons","task_button__red","task_button__green","task_button__yellow","task_done","task_delete","TodoTasks","errorClass","inputError","tasks_wrap","tasks_input","tasks_button","liquid_green","liquid_yellow","Root","root_wrap","library","add","fab","App","nextTaskId","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","getItem","parse","newTask","newTasks","newFilterValue","changeTask","taskId","obj","t","filter","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.453dbe12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks_wrap\":\"Todo_Tasks_tasks_wrap__3zIuJ\",\"tasks_input\":\"Todo_Tasks_tasks_input__3Cbo6\",\"inputError\":\"Todo_Tasks_inputError__3IHks\",\"tasks_button\":\"Todo_Tasks_tasks_button__xway9\",\"hvr-push\":\"Todo_Tasks_hvr-push__2bA4G\",\"tasks_item\":\"Todo_Tasks_tasks_item__2QyiK\",\"task_title\":\"Todo_Tasks_task_title__uKZ_h\",\"tasks_title__wrap\":\"Todo_Tasks_tasks_title__wrap__nL5N8\",\"liquid\":\"Todo_Tasks_liquid__j1xHQ\",\"liquid_red\":\"Todo_Tasks_liquid_red__2NJF3\",\"liquid_green\":\"Todo_Tasks_liquid_green__3Clj2\",\"liquid_yellow\":\"Todo_Tasks_liquid_yellow__IEooR\",\"float\":\"Todo_Tasks_float__30N8B\",\"task_buttons\":\"Todo_Tasks_task_buttons__30mng\",\"task_button__red\":\"Todo_Tasks_task_button__red__3y3q3\",\"task_button__green\":\"Todo_Tasks_task_button__green__fCMZ9\",\"task_button__yellow\":\"Todo_Tasks_task_button__yellow__2Nk4a\",\"task_done\":\"Todo_Tasks_task_done__23Gw7\",\"task_delete\":\"Todo_Tasks_task_delete__shR_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_buttons\":\"Header_Buttons_header_buttons__p3d-1\",\"header_buttons__item\":\"Header_Buttons_header_buttons__item__3KJYA\",\"hvr-bob-float\":\"Header_Buttons_hvr-bob-float__3OGEw\",\"hvr-bob\":\"Header_Buttons_hvr-bob__1MoXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrap\":\"Root_root_wrap__1C1Ue\"};","import React from 'react';\r\n\r\nclass TodoListHeader extends React.Component {\r\n\r\n\tstate = {\r\n\t\terror: false,\r\n\t\ttitle: ''\r\n\t};\r\n\r\n\tonAddTaskClick = () => {\r\n\t\tlet newText = this.state.title;\r\n\t\tthis.setState ({\r\n\t\t\ttitle: ''\r\n\t\t});\r\n\t\tif ( newText === '' ) {\r\n\t\t\tthis.setState ({\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState ({\r\n\t\t\t\terror: false\r\n\t\t\t});\r\n\t\t\tthis.props.addTask (newText);\r\n\t\t}\r\n\r\n\t};\r\n\tonAddTaskKeyPress = (e) => {\r\n\t\tif ( e.key === \"Enter\" ) {\r\n\t\t\tlet newText = this.state.title;\r\n\t\t\tthis.setState ({\r\n\t\t\t\ttitle: ''\r\n\t\t\t});\r\n\t\t\tif ( newText === '' ) {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\terror: true\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\terror: false\r\n\t\t\t\t});\r\n\t\t\t\tthis.props.addTask (newText);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n\r\n\tonTitleChange = (e) => {\r\n\t\tthis.setState ({\r\n\t\t\terror: false,\r\n\t\t\ttitle: e.currentTarget.value\r\n\t\t});\r\n\r\n\t};\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"todoList-header\">\r\n\t\t\t\t<h3 className=\"todoList-header__title\">What to Learn</h3>\r\n\t\t\t\t<div className=\"todoList-newTaskForm\">\r\n\t\t\t\t\t<input className={this.state.error ? 'error' : ''} value={this.state.title}\r\n\t\t\t\t\t\t   onKeyPress={this.onAddTaskKeyPress} onChange={this.onTitleChange}\r\n\t\t\t\t\t\t   type=\"text\" placeholder=\"New task name\"/>\r\n\t\t\t\t\t<button onClick={this.onAddTaskClick}>Add</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoListHeader;\r\n\r\n","import React from 'react';\r\n\r\nclass TodoListTask extends React.Component {\r\n\tstate =  {\r\n\t\teditMode : false\r\n\t};\r\n\r\n\tonIsDoneChanges = (e) => {\r\n\t\tthis.props.changeStatus(this.props.task.id, e.currentTarget.checked)\r\n\t};\r\n\tonTitleChange = (e) => {\r\n\t\tthis.props.changeTitle(this.props.task.id, e.currentTarget.value)\r\n\t};\r\n\r\n\tactiveEditorMode = () => {\r\n\t\tthis.setState({\r\n\t\t\teditMode : true\r\n\t\t});\r\n\t};\r\n\tdeactivateEditMode = () => {\r\n\t\tthis.setState({\r\n\t\t\teditMode : false\r\n\t\t});\r\n\t};\r\n\r\n\trender = () => {\r\n\t\tlet currentClass =  this.props.task.isDone  ? 'todoList-task done' : 'todoList-task';\r\n\r\n\t\treturn (\r\n\t\t\t<div className={currentClass}>\r\n\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t   checked={this.props.task.isDone}\r\n\t\t\t\t\t   onChange={this.onIsDoneChanges}/>\r\n\t\t\t\t{this.state.editMode\r\n\t\t\t\t? <input onBlur={this.deactivateEditMode} onChange={this.onTitleChange}\r\n\t\t\t\t\t\t value={this.props.task.title} autoFocus={true}/>\r\n\t\t\t\t: <span onClick={this.activeEditorMode}> {this.props.task.id}\r\n\t\t\t\t{this.props.task.title}, {this.props.task.priority}</span>\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoListTask;\r\n\r\n","import React from 'react';\r\nimport TodoListTask from \"./TodoListTask\";\r\n\r\nclass TodoListTasks extends React.Component {\r\n\trender = () => {\r\n\r\n\t\tlet tasksElements = this.props.tasks.map(task => {\r\n\t\t\treturn (\r\n\t\t\t\t<TodoListTask  changeStatus={this.props.changeStatus}\r\n\t\t\t\t\t\t\t  task={task} changeTitle={this.props.changeTitle}/>\r\n\t\t\t)\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className=\"todoList-tasks\">\r\n\t\t\t\t{tasksElements}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default TodoListTasks;\r\n\r\n","import React from 'react';\r\n\r\nclass TodoListFooter extends React.Component {\r\n\r\n\tstate = {\r\n\t\tisHidden: false\r\n\t};\r\n\r\n\tonAllFilterClick = () => {\r\n\t\tthis.props.changeFilter ('All');\r\n\t};\r\n\r\n\tonCompletedFilterClick = () => {\r\n\t\tthis.props.changeFilter ('Completed');\r\n\t};\r\n\r\n\tonActiveFilterClick = () => {\r\n\t\tthis.props.changeFilter ('Active');\r\n\t};\r\n\r\n\tonShowFiltersClick = () => {\r\n\t\tthis.setState ({\r\n\t\t\tisHidden: !this.isHidden\r\n\t\t});\r\n\t};\r\n\tonHideFiltersClick = () => {\r\n\t\tthis.setState ({\r\n\t\t\tisHidden: this.isHidden\r\n\t\t});\r\n\t};\r\n\r\n\trender = () => {\r\n\t\tlet classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\r\n\t\tlet classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\r\n\t\tlet classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"todoList-footer\">\r\n\t\t\t\t{!this.state.isHidden && <div>\r\n\t\t\t\t\t<button onClick={this.onAllFilterClick}\r\n\t\t\t\t\t\t\tclassName={classForAll}>All\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={this.onCompletedFilterClick}\r\n\t\t\t\t\t\t\tclassName={classForCompleted}>Completed\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={this.onActiveFilterClick}\r\n\t\t\t\t\t\t\tclassName={classForActive}>Active\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>}\r\n\t\t\t\t{!this.state.isHidden && <span onClick={this.onShowFiltersClick}>hide</span>}\r\n\t\t\t\t{this.state.isHidden && <span onClick={this.onHideFiltersClick}>show</span>}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\n","import React from 'react';\r\nimport styles from './Header_Buttons.module.css';\r\n\r\n\r\nclass HeaderButtons extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\tonAllFilterClick = () => {\r\n\t\tthis.props.changeFilter ('All');\r\n\t};\r\n\r\n\tonCompletedFilterClick = () => {\r\n\t\tthis.props.changeFilter ('Completed');\r\n\t};\r\n\r\n\tonActiveFilterClick = () => {\r\n\t\tthis.props.changeFilter ('Active');\r\n\t};\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className={styles.header_buttons}>\r\n\t\t\t\t<button className={styles.header_buttons__item} onClick={this.onAllFilterClick} >All</button>\r\n\t\t\t\t<button className={styles.header_buttons__item} onClick={this.onCompletedFilterClick} >Done</button>\r\n\t\t\t\t<button className={styles.header_buttons__item} onClick={this.onActiveFilterClick}>Active</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default HeaderButtons;","import React from 'react';\r\nimport styles from './Todo_Header.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HeaderButtons from \"./Header_Buttons/Header_Buttons\";\r\n\r\n\r\nclass Header extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\r\n\tstate = {\r\n\t\tisHidden: false\r\n\t};\r\n\r\n\tonShowFiltersClick = () => {\r\n\t\tthis.setState ({\r\n\t\t\tisHidden: this.isHidden\r\n\t\t});\r\n\t};\r\n\tonHideFiltersClick = () => {\r\n\t\tthis.setState ({\r\n\t\t\tisHidden: !this.isHidden\r\n\t\t});\r\n\t};\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className={styles.header}>\r\n\t\t\t\t<div className={styles.header_title}>New Tasks</div>\r\n\t\t\t\t<div className={styles.header_logo}>\r\n\t\t\t\t\t<div className={styles.header_logo__icon}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={[ 'fab', 'sith' ]} spin size='lg'/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.header_logo__hide}>\r\n\t\t\t\t\t\t{this.state.isHidden && <button className={styles.header_logo__button}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.onShowFiltersClick}>show</button>}\r\n\t\t\t\t\t\t{!this.state.isHidden && <button className={styles.header_logo__button}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t onClick={this.onHideFiltersClick}>hide</button>}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!this.state.isHidden && <HeaderButtons changeFilter={this.props.changeFilter}/>}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './Todo_Task.module.css';\r\nimport classNames from \"classnames\";\r\n\r\n\r\nclass TodoTask extends React.Component {\r\n\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\r\n\tstate =  {\r\n\t\teditMode : false\r\n\t};\r\n\r\n\tonIsDoneChanges = (e) => {\r\n\t\tthis.props.changeStatus(this.props.task.id, e.currentTarget.checked)\r\n\t};\r\n\tonTitleChange = (e) => {\r\n\t\tthis.props.changeTitle(this.props.task.id, e.currentTarget.value)\r\n\t};\r\n\r\n\tactiveEditorMode = () => {\r\n\t\tthis.setState({\r\n\t\t\teditMode : true\r\n\t\t});\r\n\t};\r\n\tdeactivateEditMode = () => {\r\n\t\tthis.setState({\r\n\t\t\teditMode : false\r\n\t\t});\r\n\t};\r\n\r\n\r\n//\r\n// {this.state.editMode\r\n// ? <input onBlur={this.deactivateEditMode} onChange={this.onTitleChange}\r\n// value={this.props.task.title} autoFocus={true}/>\r\n// : <span onClick={this.activeEditorMode}> {this.props.task.id}\r\n// {this.props.task.title}, {this.props.task.priority}</span>\r\n// }\r\n//\r\n//\r\n\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className={styles.tasks_item}>\r\n\t\t\t\t<div className={styles.tasks_title__wrap}>\r\n\r\n\t\t\t\t\t{this.state.editMode\r\n\t\t\t\t\t? <input  className={styles.input_onblur} onBlur={this.deactivateEditMode} onChange={this.onTitleChange}\r\n\t\t\t\t\tvalue={this.props.task.title} autoFocus={true}/>\r\n\t\t\t\t\t:<div className={styles.task_title} onClick={this.activeEditorMode}>{this.props.task.title}</div>\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t<div className={classNames (styles.liquid, styles.liquid_red)}></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.task_buttons}>\r\n\t\t\t\t\t<button className={styles.task_button__red}>high</button>\r\n\t\t\t\t\t<button className={styles.task_button__green}>medium</button>\r\n\t\t\t\t\t<button className={styles.task_button__yellow}>low</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.task_done}>\r\n\t\t\t\t\t<input type=\"checkbox\"  checked={this.props.task.isDone}\r\n\t\t\t\t\t\t   onChange={this.onIsDoneChanges}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.task_delete}>\r\n\t\t\t\t\t<button>del</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default TodoTask;","import React from 'react';\r\nimport styles from './Todo_Tasks.module.css';\r\nimport TodoTask from \"./Todo_Task/Todo_Task\";\r\nimport classNames from 'classnames';\r\n\r\n\r\nclass TodoTasks extends React.Component {\r\n\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\r\n\tstate = {\r\n\t\terror: false,\r\n\t\ttitle: ''\r\n\t};\r\n\r\n\tonAddTaskClick = () => {\r\n\t\tlet newText = this.state.title;\r\n\t\tthis.setState ({\r\n\t\t\ttitle: ''\r\n\t\t});\r\n\t\tif ( newText === '' ) {\r\n\t\t\tthis.setState ({\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState ({\r\n\t\t\t\terror: false\r\n\t\t\t});\r\n\t\t\tthis.props.addTask (newText);\r\n\t\t}\r\n\r\n\t};\r\n\tonAddTaskKeyPress = (e) => {\r\n\t\tif ( e.key === \"Enter\" ) {\r\n\t\t\tlet newText = this.state.title;\r\n\t\t\tthis.setState ({\r\n\t\t\t\ttitle: ''\r\n\t\t\t});\r\n\t\t\tif ( newText === '' ) {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\terror: true\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\terror: false\r\n\t\t\t\t});\r\n\t\t\t\tthis.props.addTask (newText);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n\r\n\tonTitleChange = (e) => {\r\n\t\tthis.setState ({\r\n\t\t\terror: false,\r\n\t\t\ttitle: e.currentTarget.value\r\n\t\t});\r\n\r\n\t};\r\n\r\n\r\n\terrorClass = styles.inputError;\r\n\r\n\trender = () => {\r\n\r\n\t\tlet tasksElements = this.props.tasks.map(task => {\r\n\t\t\treturn (\r\n\t\t\t\t<TodoTask  changeStatus={this.props.changeStatus} key={task.id}\r\n\t\t\t\t\t\t   task={task} changeTitle={this.props.changeTitle}/>\r\n\t\t\t)\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className={styles.tasks_wrap}>\r\n\t\t\t\t<div className={styles.tasks_input}>\r\n\t\t\t\t\t<input className={this.state.error ? this.errorClass : ''} value={this.state.title}\r\n\t\t\t\t\t\t   type=\"text\" placeholder='Enter task name'  onKeyPress={this.onAddTaskKeyPress}\r\n\t\t\t\t\t\t   onChange={this.onTitleChange}/>\r\n\t\t\t\t\t<button className={styles.tasks_button} onClick={this.onAddTaskClick}>add</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.tasks_item}>\r\n\t\t\t\t\t<div className={styles.tasks_title__wrap}>\r\n\t\t\t\t\t\t<div className={styles.task_title}>example</div>\r\n\t\t\t\t\t\t<div className={classNames (styles.liquid, styles.liquid_red)}></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.task_buttons}>\r\n\t\t\t\t\t\t<button className={styles.task_button__red}>high</button>\r\n\t\t\t\t\t\t<button className={styles.task_button__green}>medium</button>\r\n\t\t\t\t\t\t<button className={styles.task_button__yellow}>low</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.task_done}>\r\n\t\t\t\t\t\t<input type=\"checkbox\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.task_delete}>\r\n\t\t\t\t\t\t<button>del</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.tasks_item}>\r\n\t\t\t\t\t<div className={styles.tasks_title__wrap}>\r\n\t\t\t\t\t\t<div className={styles.task_title}>example</div>\r\n\t\t\t\t\t\t<div className={classNames (styles.liquid, styles.liquid_green)}></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.task_buttons}>\r\n\t\t\t\t\t\t<button className={styles.task_button__red}>high</button>\r\n\t\t\t\t\t\t<button className={styles.task_button__green}>medium</button>\r\n\t\t\t\t\t\t<button className={styles.task_button__yellow}>low</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.task_done}>\r\n\t\t\t\t\t\t<input type=\"checkbox\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.task_delete}>\r\n\t\t\t\t\t\t<button>del</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.tasks_item}>\r\n\t\t\t\t\t<div className={styles.tasks_title__wrap}>\r\n\t\t\t\t\t\t<div className={styles.task_title}>example</div>\r\n\t\t\t\t\t\t<div className={classNames (styles.liquid, styles.liquid_yellow)}></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.task_buttons}>\r\n\t\t\t\t\t\t<button className={styles.task_button__red}>high</button>\r\n\t\t\t\t\t\t<button className={styles.task_button__green}>medium</button>\r\n\t\t\t\t\t\t<button className={styles.task_button__yellow}>low</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.task_done}>\r\n\t\t\t\t\t\t<input type=\"checkbox\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.task_delete}>\r\n\t\t\t\t\t\t<button>del</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{tasksElements}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default TodoTasks;","import React from 'react';\r\nimport styles from './Root.module.css';\r\nimport Header from \"./Todo_Header/Todo_Header\";\r\nimport TodoTasks from \"./Todo_Tasks/Todo_Tasks\";\r\n\r\n\r\nclass Root extends React.Component {\r\n\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className={styles.root_wrap}>\r\n\t\t\t\t<Header state={this.props.state} changeFilter={this.props.changeFilter}/>\r\n\t\t\t\t<TodoTasks addTask={this.props.addTask} tasks={this.props.tasks}\r\n\t\t\t\t\t\t   changeTitle={this.props.changeTitle} changeStatus={this.props.changeStatus}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t};\r\n\r\n}\r\n\r\nexport default Root;","import React from 'react';\r\nimport './App.css';\r\nimport TodoListHeader from \"./TodoListHeader\";\r\nimport TodoListTasks from \"./TodoListTasks\";\r\nimport TodoListFooter from \"./TodoListFooter\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport Root from \"./Todo/Root\";\r\n\r\n\r\nlibrary.add (fab);\r\n\r\nclass App extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\r\n\tstate = {\r\n\r\n\t\ttasks: [],\r\n\t\tfilterValue: \"All\",\r\n\t\tnextTaskId: 0,\r\n\t};\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.restoreState ();\r\n\t};\r\n\r\n\tsaveState = () => {\r\n\t\tlet stateAsString = JSON.stringify (this.state);\r\n\t\tlocalStorage.setItem ('our-state', stateAsString);\r\n\t};\r\n\r\n\trestoreState = () => {\r\n\t\tlet state = {\r\n\t\t\ttasks: [],\r\n\t\t\tfilterValue: 'All',\r\n\t\t\tnextTaskId: 0,\r\n\t\t};\r\n\t\tlet stateAsString = localStorage.getItem ('our-state');\r\n\t\tif ( stateAsString !== null ) {\r\n\t\t\tstate = JSON.parse (stateAsString);\r\n\t\t}\r\n\t\tthis.setState (state);\r\n\t};\r\n\r\n\taddTask = (title) => {\r\n\t\tlet newTask = {\r\n\t\t\tid: this.state.nextTaskId,\r\n\t\t\ttitle: title,\r\n\t\t\tisDone: false,\r\n\t\t\tpriority: 'low'\r\n\t\t};\r\n\r\n\t\tlet newTasks = [ ...this.state.tasks, newTask ];\r\n\t\tthis.setState ({\r\n\t\t\ttasks: newTasks,\r\n\t\t\tnextTaskId: this.state.nextTaskId + 1,\r\n\t\t}, () => {this.saveState ();});\r\n\r\n\t};\r\n\r\n\tchangeFilter = (newFilterValue) => {\r\n\t\tthis.setState ({\r\n\t\t\tfilterValue: newFilterValue\r\n\t\t}, () => {this.saveState ();})\r\n\t};\r\n\tchangeTask = (taskId, obj) => {\r\n\t\tlet newTasks = this.state.tasks.map (t => {\r\n\t\t\tif ( t.id === taskId ) {\r\n\t\t\t\treturn { ...t, ...obj }\r\n\t\t\t} else {\r\n\t\t\t\treturn t\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.setState ({\r\n\t\t\ttasks: newTasks\r\n\t\t}, () => {this.saveState ();})\r\n\t};\r\n\r\n\tchangeStatus = (taskId, isDone) => {\r\n\t\tthis.changeTask (taskId, { isDone: isDone });\r\n\r\n\t};\r\n\tchangeTitle = (taskId, title) => {\r\n\t\tthis.changeTask (taskId, { title: title });\r\n\r\n\t};\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<div className=\"todoList\">\r\n\t\t\t\t\t<Root state={this.state} addTask={this.addTask} changeFilter={this.changeFilter}\r\n\t\t\t\t\t\t  changeTitle={this.changeTitle} changeStatus={this.changeStatus}\r\n\t\t\t\t\t\t  tasks={this.state.tasks.filter (t => {\r\n\t\t\t\t\t\t\t  return this.state.filterValue === \"Active\" && t.isDone === false ||\r\n\t\t\t\t\t\t\t\t  this.state.filterValue === \"Completed\" && t.isDone === true ||\r\n\t\t\t\t\t\t\t\t  this.state.filterValue === \"All\"\r\n\t\t\t\t\t\t  })}/>\r\n\t\t\t\t\t<div className='todo_wrap'>\r\n\t\t\t\t\t\t<TodoListHeader addTask={this.addTask}/>\r\n\t\t\t\t\t\t<TodoListTasks changeTitle={this.changeTitle} changeStatus={this.changeStatus}\r\n\t\t\t\t\t\t\t\t\t   tasks={this.state.tasks.filter (t => {\r\n\t\t\t\t\t\t\t\t\t\t   return this.state.filterValue === \"Active\" && t.isDone === false ||\r\n\t\t\t\t\t\t\t\t\t\t\t   this.state.filterValue === \"Completed\" && t.isDone === true ||\r\n\t\t\t\t\t\t\t\t\t\t\t   this.state.filterValue === \"All\"\r\n\t\t\t\t\t\t\t\t\t   })}/>\r\n\t\t\t\t\t\t<TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks_item\":\"Todo_Task_tasks_item__37cyi\",\"task_title\":\"Todo_Task_task_title__1AWQL\",\"tasks_title__wrap\":\"Todo_Task_tasks_title__wrap__3y0J7\",\"liquid\":\"Todo_Task_liquid__3D62l\",\"liquid_red\":\"Todo_Task_liquid_red__1kA1f\",\"liquid_green\":\"Todo_Task_liquid_green__7QcuZ\",\"liquid_yellow\":\"Todo_Task_liquid_yellow__YnX1O\",\"float\":\"Todo_Task_float__3KOPi\",\"task_buttons\":\"Todo_Task_task_buttons__NSYQQ\",\"task_button__red\":\"Todo_Task_task_button__red__P3C9B\",\"task_button__green\":\"Todo_Task_task_button__green__1yz8E\",\"task_button__yellow\":\"Todo_Task_task_button__yellow__1Bl1N\",\"hvr-push\":\"Todo_Task_hvr-push__1_OCu\",\"task_done\":\"Todo_Task_task_done__1FHO1\",\"task_delete\":\"Todo_Task_task_delete__1BZgk\",\"input_onblur\":\"Todo_Task_input_onblur__2zA1T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Todo_Header_header__2FXaE\",\"header_title\":\"Todo_Header_header_title__GatqN\",\"header_logo\":\"Todo_Header_header_logo__1dGfm\",\"header_logo__button\":\"Todo_Header_header_logo__button__1XpGI\"};"],"sourceRoot":""}
{"version":3,"sources":["Todo/Root.module.css","TodoListHeader.jsx","TodoListTask.jsx","TodoListTasks.jsx","TodoListFooter.jsx","Todo/Root.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","TodoListHeader","state","error","title","onAddTaskClick","newText","setState","props","addTask","onAddTaskKeyPress","e","key","onTitleChange","currentTarget","value","render","className","onKeyPress","onChange","type","placeholder","onClick","React","Component","TodoListTask","editMode","onIsDoneChanges","changeStatus","task","id","checked","changeTitle","activeEditorMode","deactivateEditMode","currentClass","isDone","onBlur","autoFocus","priority","TodoListTasks","tasksElements","tasks","map","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","Root","styles","root_wrap","header","header_title","header_logo","header_logo__icon","icon","spin","size","header_logo__hide","header_logo__button","header_buttons","header_buttons__item","tasks_wrap","tasks_input","tasks_button","tasks_item","tasks_title__wrap","task_title","classNames","liquid","liquid_red","task_buttons","task_button__red","task_button__green","task_button__yellow","task_done","task_delete","liquid_green","liquid_yellow","library","add","fab","App","nextTaskId","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","getItem","parse","newTask","newTasks","newFilterValue","changeTask","taskId","obj","t","filter","this","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3cd799f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrap\":\"Root_root_wrap__1C1Ue\",\"header\":\"Root_header__2hOW2\",\"header_title\":\"Root_header_title__1g4GZ\",\"header_logo\":\"Root_header_logo__20F0a\",\"header_logo__button\":\"Root_header_logo__button__dKNYv\",\"header_buttons\":\"Root_header_buttons__35vGu\",\"header_buttons__item\":\"Root_header_buttons__item__2ELt5\",\"hvr-bob-float\":\"Root_hvr-bob-float__3xe1X\",\"hvr-bob\":\"Root_hvr-bob__23lSq\",\"tasks_wrap\":\"Root_tasks_wrap__muPW-\",\"tasks_input\":\"Root_tasks_input__1R058\",\"tasks_button\":\"Root_tasks_button__uTrm_\",\"hvr-push\":\"Root_hvr-push__1h_aC\",\"tasks_item\":\"Root_tasks_item__1fk77\",\"task_title\":\"Root_task_title__1U5oR\",\"tasks_title__wrap\":\"Root_tasks_title__wrap__f4W83\",\"liquid\":\"Root_liquid__qqvpB\",\"liquid_red\":\"Root_liquid_red__1-Vns\",\"liquid_green\":\"Root_liquid_green__ASsTd\",\"liquid_yellow\":\"Root_liquid_yellow__2TUEv\",\"float\":\"Root_float__D40UK\",\"task_buttons\":\"Root_task_buttons__5cAeL\",\"task_button__red\":\"Root_task_button__red__fpGx5\",\"task_button__green\":\"Root_task_button__green__28jdN\",\"task_button__yellow\":\"Root_task_button__yellow__3S3aT\",\"task_done\":\"Root_task_done__2XnqX\",\"task_delete\":\"Root_task_delete__CVswH\"};","import React from 'react';\r\n\r\nclass TodoListHeader extends React.Component {\r\n\r\n\tstate = {\r\n\t\terror: false,\r\n\t\ttitle: ''\r\n\t};\r\n\r\n\tonAddTaskClick = () => {\r\n\t\tlet newText = this.state.title;\r\n\t\tthis.setState ({\r\n\t\t\ttitle: ''\r\n\t\t});\r\n\t\tif ( newText === '' ) {\r\n\t\t\tthis.setState ({\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState ({\r\n\t\t\t\terror: false\r\n\t\t\t});\r\n\t\t\tthis.props.addTask (newText);\r\n\t\t}\r\n\r\n\t};\r\n\tonAddTaskKeyPress = (e) => {\r\n\t\tif ( e.key === \"Enter\" ) {\r\n\t\t\tlet newText = this.state.title;\r\n\t\t\tthis.setState ({\r\n\t\t\t\ttitle: ''\r\n\t\t\t});\r\n\t\t\tif ( newText === '' ) {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\terror: true\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\terror: false\r\n\t\t\t\t});\r\n\t\t\t\tthis.props.addTask (newText);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n\r\n\tonTitleChange = (e) => {\r\n\t\tthis.setState ({\r\n\t\t\terror: false,\r\n\t\t\ttitle: e.currentTarget.value\r\n\t\t});\r\n\r\n\t};\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"todoList-header\">\r\n\t\t\t\t<h3 className=\"todoList-header__title\">What to Learn</h3>\r\n\t\t\t\t<div className=\"todoList-newTaskForm\">\r\n\t\t\t\t\t<input className={this.state.error ? 'error' : ''} value={this.state.title}\r\n\t\t\t\t\t\t   onKeyPress={this.onAddTaskKeyPress} onChange={this.onTitleChange}\r\n\t\t\t\t\t\t   type=\"text\" placeholder=\"New task name\"/>\r\n\t\t\t\t\t<button onClick={this.onAddTaskClick}>Add</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoListHeader;\r\n\r\n","import React from 'react';\r\n\r\nclass TodoListTask extends React.Component {\r\n\tstate =  {\r\n\t\teditMode : false\r\n\t};\r\n\r\n\tonIsDoneChanges = (e) => {\r\n\t\tthis.props.changeStatus(this.props.task.id, e.currentTarget.checked)\r\n\t};\r\n\tonTitleChange = (e) => {\r\n\t\tthis.props.changeTitle(this.props.task.id, e.currentTarget.value)\r\n\t};\r\n\r\n\tactiveEditorMode = () => {\r\n\t\tthis.setState({\r\n\t\t\teditMode : true\r\n\t\t});\r\n\t};\r\n\tdeactivateEditMode = () => {\r\n\t\tthis.setState({\r\n\t\t\teditMode : false\r\n\t\t});\r\n\t};\r\n\r\n\trender = () => {\r\n\t\tlet currentClass =  this.props.task.isDone  ? 'todoList-task done' : 'todoList-task';\r\n\r\n\t\treturn (\r\n\t\t\t<div className={currentClass}>\r\n\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t   checked={this.props.task.isDone}\r\n\t\t\t\t\t   onChange={this.onIsDoneChanges}/>\r\n\t\t\t\t{this.state.editMode\r\n\t\t\t\t? <input onBlur={this.deactivateEditMode} onChange={this.onTitleChange} value={this.props.task.title} autoFocus={true}/>\r\n\t\t\t\t: <span onClick={this.activeEditorMode}> {this.props.task.id} {this.props.task.title}, {this.props.task.priority}</span>\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoListTask;\r\n\r\n","import React from 'react';\r\nimport TodoListTask from \"./TodoListTask\";\r\n\r\nclass TodoListTasks extends React.Component {\r\n\trender = () => {\r\n\r\n\t\tlet tasksElements = this.props.tasks.map(task => {\r\n\t\t\treturn (\r\n\t\t\t\t<TodoListTask  changeStatus={this.props.changeStatus}\r\n\t\t\t\t\t\t\t  task={task} changeTitle={this.props.changeTitle}/>\r\n\t\t\t)\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className=\"todoList-tasks\">\r\n\t\t\t\t{tasksElements}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default TodoListTasks;\r\n\r\n","import React from 'react';\r\n\r\nclass TodoListFooter extends React.Component {\r\n\r\n\tstate = {\r\n\t\tisHidden: false\r\n\t};\r\n\r\n\tonAllFilterClick = () => {\r\n\t\tthis.props.changeFilter ('All');\r\n\t};\r\n\r\n\tonCompletedFilterClick = () => {\r\n\t\tthis.props.changeFilter ('Completed');\r\n\t};\r\n\r\n\tonActiveFilterClick = () => {\r\n\t\tthis.props.changeFilter ('Active');\r\n\t};\r\n\r\n\tonShowFiltersClick = () => {\r\n\t\tthis.setState ({\r\n\t\t\tisHidden: !this.isHidden\r\n\t\t});\r\n\t};\r\n\tonHideFiltersClick = () => {\r\n\t\tthis.setState ({\r\n\t\t\tisHidden: this.isHidden\r\n\t\t});\r\n\t};\r\n\r\n\trender = () => {\r\n\t\tlet classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\r\n\t\tlet classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\r\n\t\tlet classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"todoList-footer\">\r\n\t\t\t\t{!this.state.isHidden && <div>\r\n\t\t\t\t\t<button onClick={this.onAllFilterClick}\r\n\t\t\t\t\t\t\tclassName={classForAll}>All\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={this.onCompletedFilterClick}\r\n\t\t\t\t\t\t\tclassName={classForCompleted}>Completed\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={this.onActiveFilterClick}\r\n\t\t\t\t\t\t\tclassName={classForActive}>Active\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>}\r\n\t\t\t\t{!this.state.isHidden && <span onClick={this.onShowFiltersClick}>hide</span>}\r\n\t\t\t\t{this.state.isHidden && <span onClick={this.onHideFiltersClick}>show</span>}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\n","import React from 'react';\r\nimport styles from './Root.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classNames from 'classnames';\r\n\r\nclass Root extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className={styles.root_wrap}>\r\n\t\t\t\t<div className={styles.header}>\r\n\t\t\t\t\t<div className={styles.header_title}> New Tasks</div>\r\n\t\t\t\t\t<div className={styles.header_logo}>\r\n\t\t\t\t\t\t<div className={styles.header_logo__icon}>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={[ 'fab', 'sith' ]} spin size='lg'/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.header_logo__hide}>\r\n\t\t\t\t\t\t\t<button className={styles.header_logo__button}>hide</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.header_buttons}>\r\n\t\t\t\t\t\t<button className={styles.header_buttons__item}>All</button>\r\n\t\t\t\t\t\t<button className={styles.header_buttons__item}>Done</button>\r\n\t\t\t\t\t\t<button className={styles.header_buttons__item}>Active</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.tasks_wrap}>\r\n\t\t\t\t\t<div className={styles.tasks_input}>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder='Enter task name'/>\r\n\t\t\t\t\t\t<button className={styles.tasks_button}>add</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.tasks_item}>\r\n\t\t\t\t\t\t<div className={styles.tasks_title__wrap}>\r\n\t\t\t\t\t\t\t<div className={styles.task_title}>title</div>\r\n\t\t\t\t\t\t\t<div className={classNames(styles.liquid, styles.liquid_red )}></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.task_buttons}>\r\n\t\t\t\t\t\t\t<button className={styles.task_button__red}>high</button>\r\n\t\t\t\t\t\t\t<button className={styles.task_button__green}>medium</button>\r\n\t\t\t\t\t\t\t<button className={styles.task_button__yellow}>low</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.task_done}>\r\n\t\t\t\t\t\t\t<input type=\"checkbox\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.task_delete}>\r\n\t\t\t\t\t\t\t<button>del</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.tasks_item}>\r\n\t\t\t\t\t\t<div className={styles.tasks_title__wrap}>\r\n\t\t\t\t\t\t\t<div className={styles.task_title}>title</div>\r\n\t\t\t\t\t\t\t<div className={classNames(styles.liquid, styles.liquid_green )}></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.task_buttons}>\r\n\t\t\t\t\t\t\t<button className={styles.task_button__red}>high</button>\r\n\t\t\t\t\t\t\t<button className={styles.task_button__green}>medium</button>\r\n\t\t\t\t\t\t\t<button className={styles.task_button__yellow}>low</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.task_done}>\r\n\t\t\t\t\t\t\t<input type=\"checkbox\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.task_delete}>\r\n\t\t\t\t\t\t\t<button>del</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.tasks_item}>\r\n\t\t\t\t\t\t<div className={styles.tasks_title__wrap}>\r\n\t\t\t\t\t\t\t<div className={styles.task_title}>title</div>\r\n\t\t\t\t\t\t\t<div className={classNames(styles.liquid, styles.liquid_yellow )}></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.task_buttons}>\r\n\t\t\t\t\t\t\t<button className={styles.task_button__red}>high</button>\r\n\t\t\t\t\t\t\t<button className={styles.task_button__green}>medium</button>\r\n\t\t\t\t\t\t\t<button className={styles.task_button__yellow}>low</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.task_done}>\r\n\t\t\t\t\t\t\t<input type=\"checkbox\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.task_delete}>\r\n\t\t\t\t\t\t\t<button>del</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t};\r\n\r\n};\r\n\r\nexport default Root;","import React from 'react';\r\nimport './App.css';\r\nimport TodoListHeader from \"./TodoListHeader\";\r\nimport TodoListTasks from \"./TodoListTasks\";\r\nimport TodoListFooter from \"./TodoListFooter\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport Root from \"./Todo/Root\";\r\n\r\n\r\nlibrary.add (fab);\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tstate = {\r\n\r\n\t\ttasks: [],\r\n\t\tfilterValue: \"All\",\r\n\t\tnextTaskId: 0,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.restoreState();\r\n\t};\r\n\r\n\tsaveState = () => {\r\n\t\tlet stateAsString = JSON.stringify(this.state);\r\n\t\tlocalStorage.setItem('our-state', stateAsString);\r\n\t};\r\n\r\n\trestoreState = () => {\r\n\t\tlet state= {\r\n\t\t\ttasks: [],\r\n\t\t\tfilterValue: 'All',\r\n\t\t\tnextTaskId: 0,\r\n\t\t};\r\n\t\tlet stateAsString = localStorage.getItem('our-state');\r\n\t\tif (stateAsString !==null) {\r\n\t\t\tstate = JSON.parse(stateAsString);\r\n\t\t}\r\n\t\tthis.setState(state);\r\n\t};\r\n\r\n\taddTask = (title) => {\r\n\t\tlet newTask = {\r\n\t\t\tid: this.state.nextTaskId,\r\n\t\t\ttitle: title,\r\n\t\t\tisDone: false,\r\n\t\t\tpriority: 'low'\r\n\t\t};\r\n\r\n\t\tlet newTasks = [...this.state.tasks, newTask];\r\n\t\tthis.setState({\r\n\t\t\ttasks: newTasks,\r\n\t\t\tnextTaskId: this.state.nextTaskId +1,\r\n\t\t}, () => {this.saveState();});\r\n\r\n\t};\r\n\r\n\tchangeFilter = (newFilterValue) => {\r\n\t\tthis.setState({\r\n\t\t\tfilterValue: newFilterValue\r\n\t\t},() => {this.saveState();} )\r\n\t};\r\n\tchangeTask = (taskId, obj) => {\r\n\t\tlet newTasks = this.state.tasks.map(t => {\r\n\t\t\tif (t.id === taskId) {\r\n\t\t\t\treturn {...t,...obj}\r\n\t\t\t} else {\r\n\t\t\t\treturn t\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\ttasks: newTasks\r\n\t\t}, () => {this.saveState();})\r\n\t};\r\n\r\n\tchangeStatus = (taskId, isDone) => {\r\n\t\tthis.changeTask (taskId, {isDone: isDone});\r\n\r\n\t};\r\n\tchangeTitle = (taskId, title) => {\r\n\t\tthis.changeTask (taskId, {title: title});\r\n\r\n\t};\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<div className=\"todoList\">\r\n\t\t\t\t\t<Root />\r\n\t\t\t\t\t<div className='todo_wrap'>\r\n\t\t\t\t\t\t<TodoListHeader addTask={this.addTask}/>\r\n\t\t\t\t\t\t<TodoListTasks changeTitle={this.changeTitle}  changeStatus={this.changeStatus}\r\n\t\t\t\t\t\t\t\t\t   tasks={this.state.tasks.filter(t => {\r\n\t\t\t\t\t\t\treturn this.state.filterValue === \"Active\" && t.isDone === false ||\r\n\t\t\t\t\t\t\t\tthis.state.filterValue === \"Completed\" && t.isDone === true ||\r\n\t\t\t\t\t\t\t\tthis.state.filterValue === \"All\"\r\n\t\t\t\t\t\t})}/>\r\n\t\t\t\t\t\t<TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["Todo/Todo_Header/Header_Buttons/Header_Buttons.module.css","Todo/Root.module.css","localStorage.js","TodoListTask.jsx","TodoListHeader.jsx","TodoListTasks.jsx","TodoListFooter.jsx","Todo/Todo_Header/Header_Buttons/Header_Buttons.jsx","Todo/Todo_Header/Todo_Header.jsx","Todo/Todo_Tasks/Todo_Task/Todo_Task.jsx","Todo/Todo_Tasks/Todo_Tasks.jsx","Todo/Root.jsx","App.jsx","serviceWorker.js","index.jsx","Todo/Todo_Tasks/Todo_Task/Todo_Task.module.css","Todo/Todo_Header/Todo_Header.module.css","Todo/Todo_Tasks/Todo_Tasks.module.css"],"names":["module","exports","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","TodoListTask","React","Component","editMode","onIsDoneChanges","e","props","changeStatus","task","id","currentTarget","checked","onTitleChange","changeTitle","value","activeEditorMode","setState","deactivateEditMode","render","currentClass","isDone","className","type","onChange","onBlur","title","autoFocus","onClick","priority","HeaderButtons","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","styles","header_buttons","header_buttons__item","this","Header","isHidden","onShowFiltersClick","onHideFiltersClick","header","header_title","header_logo","header_logo__icon","icon","spin","size","header_logo__hide","header_logo__button","TodoTask","onChangePriorityHigh","changePriority","onChangePriorityMedium","onChangePriorityLow","onDeleteTask","deleteTask","tasks_item","data-priority","tasks_title__wrap","input_onblur","maxLength","task_title","classNames","liquid","liquid_red","liquid_green","liquid_yellow","task_buttons","task_button__red","task_button__green","task_button__yellow","task_done","task_delete","TodoTasks","error","onAddTaskClick","newText","addTask","onAddTaskKeyPress","key","errorClass","inputError","tasksElements","tasks","map","tasks_wrap","tasks_wrap__input","tasks_input","placeholder","onKeyPress","tasks_button","Root","root_wrap","library","add","fab","App","filterValue","nextTaskId","newTask","newTasks","newFilterValue","changeTask","taskId","obj","t","filter","currentState","getItem","parse","restoreState","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac2177bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_buttons\":\"Header_Buttons_header_buttons__p3d-1\",\"header_buttons__item\":\"Header_Buttons_header_buttons__item__3KJYA\",\"hvr-bob-float\":\"Header_Buttons_hvr-bob-float__3OGEw\",\"hvr-bob\":\"Header_Buttons_hvr-bob__1MoXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_wrap\":\"Root_root_wrap__1C1Ue\"};","export const saveState = (state) => {\r\n\tlet stateAsString = JSON.stringify (state);\r\n\tlocalStorage.setItem ('our-state', stateAsString);\r\n};\r\n\r\nexport const restoreState = (currentState) => {\r\n\tlet state;\r\n\tlet stateAsString = localStorage.getItem ('our-state');\r\n\tif ( stateAsString !== null ) {\r\n\t\t state = JSON.parse (stateAsString);\r\n\t\treturn state;\r\n\t} else {\r\n\r\n\t} return currentState;\r\n\r\n};","import React from 'react';\r\n\r\nclass TodoListTask extends React.Component {\r\n\tstate =  {\r\n\t\teditMode : false\r\n\t};\r\n\r\n\tonIsDoneChanges = (e) => {\r\n\t\tthis.props.changeStatus(this.props.task.id, e.currentTarget.checked)\r\n\t};\r\n\tonTitleChange = (e) => {\r\n\t\tthis.props.changeTitle(this.props.task.id, e.currentTarget.value)\r\n\t};\r\n\r\n\tactiveEditorMode = () => {\r\n\t\tthis.setState({\r\n\t\t\teditMode : true\r\n\t\t});\r\n\t};\r\n\tdeactivateEditMode = () => {\r\n\t\tthis.setState({\r\n\t\t\teditMode : false\r\n\t\t});\r\n\t};\r\n\r\n\trender = () => {\r\n\t\tlet currentClass =  this.props.task.isDone  ? 'todoList-task done' : 'todoList-task';\r\n\r\n\t\treturn (\r\n\t\t\t<div className={currentClass}>\r\n\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t   checked={this.props.task.isDone}\r\n\t\t\t\t\t   onChange={this.onIsDoneChanges}/>\r\n\t\t\t\t{this.state.editMode\r\n\t\t\t\t? <input onBlur={this.deactivateEditMode} onChange={this.onTitleChange}\r\n\t\t\t\t\t\t value={this.props.task.title} autoFocus={true}/>\r\n\t\t\t\t: <span onClick={this.activeEditorMode}> {this.props.task.id}\r\n\t\t\t\t{this.props.task.title}, {this.props.task.priority}</span>\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoListTask;\r\n\r\n","import React from 'react';\r\n\r\nclass TodoListHeader extends React.Component {\r\n\r\n\tstate = {\r\n\t\terror: false,\r\n\t\ttitle: ''\r\n\t};\r\n\r\n\tonAddTaskClick = () => {\r\n\t\tlet newText = this.state.title;\r\n\t\tthis.setState ({\r\n\t\t\ttitle: ''\r\n\t\t});\r\n\t\tif ( newText === '' ) {\r\n\t\t\tthis.setState ({\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState ({\r\n\t\t\t\terror: false\r\n\t\t\t});\r\n\t\t\tthis.props.addTask (newText);\r\n\t\t}\r\n\r\n\t};\r\n\tonAddTaskKeyPress = (e) => {\r\n\t\tif ( e.key === \"Enter\" ) {\r\n\t\t\tlet newText = this.state.title;\r\n\t\t\tthis.setState ({\r\n\t\t\t\ttitle: ''\r\n\t\t\t});\r\n\t\t\tif ( newText === '' ) {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\terror: true\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\terror: false\r\n\t\t\t\t});\r\n\t\t\t\tthis.props.addTask (newText);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n\r\n\tonTitleChange = (e) => {\r\n\t\tthis.setState ({\r\n\t\t\terror: false,\r\n\t\t\ttitle: e.currentTarget.value\r\n\t\t});\r\n\r\n\t};\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"todoList-header\">\r\n\t\t\t\t<h3 className=\"todoList-header__title\">What to Learn</h3>\r\n\t\t\t\t<div className=\"todoList-newTaskForm\">\r\n\t\t\t\t\t<input className={this.state.error ? 'error' : ''} value={this.state.title}\r\n\t\t\t\t\t\t   onKeyPress={this.onAddTaskKeyPress} onChange={this.onTitleChange}\r\n\t\t\t\t\t\t   type=\"text\" placeholder=\"New task name\"/>\r\n\t\t\t\t\t<button onClick={this.onAddTaskClick}>Add</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoListHeader;\r\n\r\n","import React from 'react';\r\nimport TodoListTask from \"./TodoListTask\";\r\n\r\nclass TodoListTasks extends React.Component {\r\n\trender = () => {\r\n\r\n\t\tlet tasksElements = this.props.tasks.map(task => {\r\n\t\t\treturn (\r\n\t\t\t\t<TodoListTask  changeStatus={this.props.changeStatus}\r\n\t\t\t\t\t\t\t  task={task} changeTitle={this.props.changeTitle}/>\r\n\t\t\t)\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className=\"todoList-tasks\">\r\n\t\t\t\t{tasksElements}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default TodoListTasks;\r\n\r\n","import React from 'react';\r\n\r\nclass TodoListFooter extends React.Component {\r\n\r\n\tstate = {\r\n\t\tisHidden: false\r\n\t};\r\n\r\n\tonAllFilterClick = () => {\r\n\t\tthis.props.changeFilter ('All');\r\n\t};\r\n\r\n\tonCompletedFilterClick = () => {\r\n\t\tthis.props.changeFilter ('Completed');\r\n\t};\r\n\r\n\tonActiveFilterClick = () => {\r\n\t\tthis.props.changeFilter ('Active');\r\n\t};\r\n\r\n\tonShowFiltersClick = () => {\r\n\t\tthis.setState ({\r\n\t\t\tisHidden: !this.isHidden\r\n\t\t});\r\n\t};\r\n\tonHideFiltersClick = () => {\r\n\t\tthis.setState ({\r\n\t\t\tisHidden: this.isHidden\r\n\t\t});\r\n\t};\r\n\r\n\trender = () => {\r\n\t\tlet classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\r\n\t\tlet classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\r\n\t\tlet classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"todoList-footer\">\r\n\t\t\t\t{!this.state.isHidden && <div>\r\n\t\t\t\t\t<button onClick={this.onAllFilterClick}\r\n\t\t\t\t\t\t\tclassName={classForAll}>All\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={this.onCompletedFilterClick}\r\n\t\t\t\t\t\t\tclassName={classForCompleted}>Completed\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={this.onActiveFilterClick}\r\n\t\t\t\t\t\t\tclassName={classForActive}>Active\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>}\r\n\t\t\t\t{!this.state.isHidden && <span onClick={this.onShowFiltersClick}>hide</span>}\r\n\t\t\t\t{this.state.isHidden && <span onClick={this.onHideFiltersClick}>show</span>}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\n","import React from 'react';\r\nimport styles from './Header_Buttons.module.css';\r\n\r\n\r\nclass HeaderButtons extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\tonAllFilterClick = () => {\r\n\t\tthis.props.changeFilter ('All');\r\n\t};\r\n\r\n\tonCompletedFilterClick = () => {\r\n\t\tthis.props.changeFilter ('Completed');\r\n\t};\r\n\r\n\tonActiveFilterClick = () => {\r\n\t\tthis.props.changeFilter ('Active');\r\n\t};\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className={styles.header_buttons}>\r\n\t\t\t\t<button className={styles.header_buttons__item} onClick={this.onAllFilterClick} >All</button>\r\n\t\t\t\t<button className={styles.header_buttons__item} onClick={this.onCompletedFilterClick} >Done</button>\r\n\t\t\t\t<button className={styles.header_buttons__item} onClick={this.onActiveFilterClick}>Active</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default HeaderButtons;","import React from 'react';\r\nimport styles from './Todo_Header.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HeaderButtons from \"./Header_Buttons/Header_Buttons\";\r\n\r\n\r\nclass Header extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\r\n\tstate = {\r\n\t\tisHidden: false\r\n\t};\r\n\r\n\tonShowFiltersClick = () => {\r\n\t\tthis.setState ({\r\n\t\t\tisHidden: this.isHidden\r\n\t\t});\r\n\t};\r\n\tonHideFiltersClick = () => {\r\n\t\tthis.setState ({\r\n\t\t\tisHidden: !this.isHidden\r\n\t\t});\r\n\t};\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className={styles.header}>\r\n\t\t\t\t<div className={styles.header_title}>New Tasks</div>\r\n\t\t\t\t<div className={styles.header_logo}>\r\n\t\t\t\t\t<div className={styles.header_logo__icon}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={[ 'fab', 'sith' ]} spin size='lg'/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.header_logo__hide}>\r\n\t\t\t\t\t\t{this.state.isHidden && <button className={styles.header_logo__button}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.onShowFiltersClick}>show</button>}\r\n\t\t\t\t\t\t{!this.state.isHidden && <button className={styles.header_logo__button}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t onClick={this.onHideFiltersClick}>hide</button>}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!this.state.isHidden && <HeaderButtons changeFilter={this.props.changeFilter}/>}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './Todo_Task.module.css';\r\nimport classNames from \"classnames\";\r\n\r\n\r\nclass TodoTask extends React.Component {\r\n\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\r\n\tstate = {\r\n\t\teditMode: false\r\n\t};\r\n\r\n\tonIsDoneChanges = (e) => {\r\n\t\tthis.props.changeStatus (this.props.task.id, e.currentTarget.checked)\r\n\t};\r\n\tonTitleChange = (e) => {\r\n\t\tthis.props.changeTitle (this.props.task.id, e.currentTarget.value)\r\n\t};\r\n\tonChangePriorityHigh = () => {\r\n\t\tthis.props.changePriority (this.props.task.id, 'high');\r\n\t};\r\n\tonChangePriorityMedium = () => {\r\n\t\tthis.props.changePriority (this.props.task.id, 'medium');\r\n\t};\r\n\tonChangePriorityLow = () => {\r\n\t\tthis.props.changePriority (this.props.task.id, 'low');\r\n\t};\r\n\r\n\tactiveEditorMode = () => {\r\n\t\tthis.setState ({\r\n\t\t\teditMode: true\r\n\t\t});\r\n\t};\r\n\tdeactivateEditMode = () => {\r\n\t\tthis.setState ({\r\n\t\t\teditMode: false\r\n\t\t});\r\n\t};\r\n\r\n\tonDeleteTask = () => {\r\n\t\tthis.props.deleteTask (this.props.task.id)\r\n\t};\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className={styles.tasks_item} id={this.props.id} data-priority={this.props.priority}>\r\n\t\t\t\t<div className={styles.tasks_title__wrap}>\r\n\r\n\t\t\t\t\t{this.state.editMode\r\n\t\t\t\t\t\t? <input className={styles.input_onblur} onBlur={this.deactivateEditMode}\r\n\t\t\t\t\t\t\t\t onChange={this.onTitleChange} type='text'  maxLength=\"25\"\r\n\t\t\t\t\t\t\t\t value={this.props.task.title} autoFocus={true}/>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className={styles.task_title} onClick={this.activeEditorMode}\r\n\t\t\t\t\t\t\t maxLength=\"25\"\t>{this.props.task.title}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<div className={this.props.priority === 'high'? classNames (styles.liquid, styles.liquid_red)\r\n\t\t\t\t\t\t\t: this.props.priority === 'medium'? classNames (styles.liquid, styles.liquid_green) :\r\n\t\t\t\t\t\t\tclassNames (styles.liquid, styles.liquid_yellow)}></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.task_buttons}>\r\n\t\t\t\t\t<button className={styles.task_button__red}\r\n\t\t\t\t\t\t\tonClick={this.onChangePriorityHigh}>high</button>\r\n\t\t\t\t\t<button className={styles.task_button__green}\r\n\t\t\t\t\t\t\tonClick={this.onChangePriorityMedium}>medium</button>\r\n\t\t\t\t\t<button className={styles.task_button__yellow}\r\n\t\t\t\t\t\t\tonClick={this.onChangePriorityLow}>low</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.task_done}>\r\n\t\t\t\t\t<input type=\"checkbox\" checked={this.props.task.isDone}\r\n\t\t\t\t\t\t   onChange={this.onIsDoneChanges}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.task_delete}>\r\n\t\t\t\t\t<button onClick={this.onDeleteTask}>del</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default TodoTask;","import React from 'react';\r\nimport styles from './Todo_Tasks.module.css';\r\nimport TodoTask from \"./Todo_Task/Todo_Task\";\r\n\r\n\r\nclass TodoTasks extends React.Component {\r\n\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\r\n\tstate = {\r\n\t\terror: false,\r\n\t\ttitle: ''\r\n\t};\r\n\r\n\tonAddTaskClick = () => {\r\n\t\tlet newText = this.state.title;\r\n\t\tthis.setState ({\r\n\t\t\ttitle: ''\r\n\t\t});\r\n\t\tif ( newText === '' ) {\r\n\t\t\tthis.setState ({\r\n\t\t\t\terror: true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState ({\r\n\t\t\t\terror: false\r\n\t\t\t});\r\n\t\t\tthis.props.addTask (newText);\r\n\t\t}\r\n\r\n\t};\r\n\tonAddTaskKeyPress = (e) => {\r\n\t\tif ( e.key === \"Enter\" ) {\r\n\t\t\tlet newText = this.state.title;\r\n\t\t\tthis.setState ({\r\n\t\t\t\ttitle: ''\r\n\t\t\t});\r\n\t\t\tif ( newText === '' ) {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\terror: true\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState ({\r\n\t\t\t\t\terror: false\r\n\t\t\t\t});\r\n\t\t\t\tthis.props.addTask (newText);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n\r\n\tonTitleChange = (e) => {\r\n\t\tthis.setState ({\r\n\t\t\terror: false,\r\n\t\t\ttitle: e.currentTarget.value\r\n\t\t});\r\n\r\n\t};\r\n\terrorClass = styles.inputError;\r\n\trender = () => {\r\n\r\n\t\tlet tasksElements = this.props.tasks.map(task => {\r\n\t\t\treturn (\r\n\t\t\t\t<TodoTask  changeStatus={this.props.changeStatus} key={task.id} id={task.id} priority={task.priority}\r\n\t\t\t\t\t\t   task={task} changeTitle={this.props.changeTitle} deleteTask={this.props.deleteTask}\r\n\t\t\t\t\t\t   changePriority={this.props.changePriority}/>\r\n\t\t\t)\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className={styles.tasks_wrap}>\r\n\t\t\t\t<div className={styles.tasks_wrap__input}>\r\n\t\t\t\t\t<div className={styles.tasks_input}>\r\n\t\t\t\t\t\t<input className={this.state.error ? this.errorClass : ''} value={this.state.title}\r\n\t\t\t\t\t\t\t   type=\"text\" placeholder='Enter task name'  onKeyPress={this.onAddTaskKeyPress}\r\n\t\t\t\t\t\t\t   onChange={this.onTitleChange} maxLength=\"25\" />\r\n\t\t\t\t\t\t<button className={styles.tasks_button} onClick={this.onAddTaskClick}>add</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{tasksElements}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default TodoTasks;","import React from 'react';\r\nimport styles from './Root.module.css';\r\nimport Header from \"./Todo_Header/Todo_Header\";\r\nimport TodoTasks from \"./Todo_Tasks/Todo_Tasks\";\r\n\r\n\r\nclass Root extends React.Component {\r\n\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className={styles.root_wrap}>\r\n\t\t\t\t<Header state={this.props.state} changeFilter={this.props.changeFilter}/>\r\n\t\t\t\t<TodoTasks addTask={this.props.addTask} tasks={this.props.tasks} deleteTask={this.props.deleteTask}\r\n\t\t\t\t\t\t   changeTitle={this.props.changeTitle} changeStatus={this.props.changeStatus}\r\n\t\t\t\t\t\t   state={this.props.state} changePriority={this.props.changePriority}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t};\r\n\r\n}\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { saveState, restoreState } from './localStorage'\r\nimport TodoListHeader from \"./TodoListHeader\";\r\nimport TodoListTasks from \"./TodoListTasks\";\r\nimport TodoListFooter from \"./TodoListFooter\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport Root from \"./Todo/Root\";\r\n\r\n\r\nlibrary.add (fab);\r\n\r\nclass App extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t}\r\n\r\n\tstate = {\r\n\r\n\t\ttasks: [\r\n\t\t\t{\r\n\t\t\t\tid: 0,\r\n\t\t\t\ttitle: 'Example1',\r\n\t\t\t\tisDone: false,\r\n\t\t\t\tpriority: 'high'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 1,\r\n\t\t\t\ttitle: 'Example2',\r\n\t\t\t\tisDone: false,\r\n\t\t\t\tpriority: 'low'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 2,\r\n\t\t\t\ttitle: 'Example3',\r\n\t\t\t\tisDone: true,\r\n\t\t\t\tpriority: 'medium'\r\n\t\t\t},\r\n\t\t],\r\n\t\tfilterValue: \"All\",\r\n\t\tnextTaskId: 3,\r\n\t};\r\n\r\n\tcomponentDidMount () {\r\n\t\tlet state = restoreState (this.state);\r\n\t\tthis.setState (state);\r\n\r\n\t};\r\n\r\n\t// saveState = () => {\r\n\t// \tlet stateAsString = JSON.stringify (this.state);\r\n\t// \tlocalStorage.setItem ('our-state', stateAsString);\r\n\t// };\r\n\t//\r\n\t// restoreState = () => {\r\n\t// \tlet state = {\r\n\t// \t\ttasks: [\r\n\t// \t\t\t{\r\n\t// \t\t\t\tid: 0,\r\n\t// \t\t\t\ttitle: 'Example',\r\n\t// \t\t\t\tisDone: false,\r\n\t// \t\t\t\tpriority: 'high'\r\n\t// \t\t\t},\r\n\t// \t\t\t{\r\n\t// \t\t\t\tid: 1,\r\n\t// \t\t\t\ttitle: 'Example',\r\n\t// \t\t\t\tisDone: false,\r\n\t// \t\t\t\tpriority: 'low'\r\n\t// \t\t\t},\r\n\t// \t\t\t{\r\n\t// \t\t\t\tid: 2,\r\n\t// \t\t\t\ttitle: 'Example',\r\n\t// \t\t\t\tisDone: true,\r\n\t// \t\t\t\tpriority: 'medium'\r\n\t// \t\t\t},\r\n\t// \t\t],\r\n\t// \t\tfilterValue: 'All',\r\n\t// \t\tnextTaskId: 3,\r\n\t// \t};\r\n\t// \tlet stateAsString = localStorage.getItem ('our-state');\r\n\t// \tif ( stateAsString !== null ) {\r\n\t// \t\tstate = JSON.parse (stateAsString);\r\n\t// \t}\r\n\t// \tthis.setState (state);\r\n\t// };\r\n\r\n\taddTask = (title) => {\r\n\t\tlet newTask = {\r\n\t\t\tid: this.state.nextTaskId,\r\n\t\t\ttitle: title,\r\n\t\t\tisDone: false,\r\n\t\t\tpriority: 'low'\r\n\t\t};\r\n\r\n\t\tlet newTasks = [ ...this.state.tasks, newTask ];\r\n\t\tthis.setState ({\r\n\t\t\ttasks: newTasks,\r\n\t\t\tnextTaskId: this.state.nextTaskId + 1,\r\n\t\t}, () => {saveState (this.state);});\r\n\r\n\t};\r\n\r\n\tchangeFilter = (newFilterValue) => {\r\n\t\tthis.setState ({\r\n\t\t\tfilterValue: newFilterValue\r\n\t\t}, () => {saveState (this.state);})\r\n\t};\r\n\tchangeTask = (taskId, obj) => {\r\n\t\tlet newTasks = this.state.tasks.map (t => {\r\n\t\t\tif ( t.id === taskId ) {\r\n\t\t\t\treturn { ...t, ...obj }\r\n\t\t\t} else {\r\n\t\t\t\treturn t\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.setState ({\r\n\t\t\ttasks: newTasks\r\n\t\t}, () => {saveState (this.state);})\r\n\t};\r\n\r\n\tchangeStatus = (taskId, isDone) => {\r\n\t\tthis.changeTask (taskId, { isDone: isDone });\r\n\r\n\t};\r\n\tchangeTitle = (taskId, title) => {\r\n\t\tthis.changeTask (taskId, { title: title });\r\n\r\n\t};\r\n\tchangePriority = (taskId, priority) => {\r\n\t\tthis.changeTask (taskId, { priority: priority });\r\n\r\n\t};\r\n\r\n\tdeleteTask = (taskId) => {\r\n\t\tlet newTasks = this.state.tasks.filter (t => t.id !== taskId);\r\n\t\tthis.setState ({\r\n\t\t\ttasks: newTasks\r\n\t\t}, () => {saveState (this.state);})\r\n\t};\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<div className=\"todoList\">\r\n\t\t\t\t\t<Root state={this.state} addTask={this.addTask} changeFilter={this.changeFilter}\r\n\t\t\t\t\t\t  changeTitle={this.changeTitle} changeStatus={this.changeStatus} deleteTask={this.deleteTask}\r\n\t\t\t\t\t\t  changePriority={this.changePriority}\r\n\t\t\t\t\t\t  tasks={this.state.tasks.filter (t => {\r\n\t\t\t\t\t\t\t  return this.state.filterValue === \"Active\" && t.isDone === false ||\r\n\t\t\t\t\t\t\t\t  this.state.filterValue === \"Completed\" && t.isDone === true ||\r\n\t\t\t\t\t\t\t\t  this.state.filterValue === \"All\"\r\n\t\t\t\t\t\t  })}/>\r\n\t\t\t\t\t{/*<div className='todo_wrap'>*/}\r\n\t\t\t\t\t{/*\t<TodoListHeader addTask={this.addTask}/>*/}\r\n\t\t\t\t\t{/*\t<TodoListTasks changeTitle={this.changeTitle} changeStatus={this.changeStatus}*/}\r\n\t\t\t\t\t{/*\t\t\t\t   tasks={this.state.tasks.filter (t => {*/}\r\n\t\t\t\t\t{/*\t\t\t\t\t   return this.state.filterValue === \"Active\" && t.isDone === false ||*/}\r\n\t\t\t\t\t{/*\t\t\t\t\t\t   this.state.filterValue === \"Completed\" && t.isDone === true ||*/}\r\n\t\t\t\t\t{/*\t\t\t\t\t\t   this.state.filterValue === \"All\"*/}\r\n\t\t\t\t\t{/*\t\t\t\t   })}/>*/}\r\n\t\t\t\t\t{/*\t<TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>*/}\r\n\t\t\t\t\t{/*</div>*/}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks_item\":\"Todo_Task_tasks_item__37cyi\",\"task_title\":\"Todo_Task_task_title__1AWQL\",\"tasks_title__wrap\":\"Todo_Task_tasks_title__wrap__3y0J7\",\"liquid\":\"Todo_Task_liquid__3D62l\",\"liquid_red\":\"Todo_Task_liquid_red__1kA1f\",\"liquid_green\":\"Todo_Task_liquid_green__7QcuZ\",\"liquid_yellow\":\"Todo_Task_liquid_yellow__YnX1O\",\"float\":\"Todo_Task_float__3KOPi\",\"task_buttons\":\"Todo_Task_task_buttons__NSYQQ\",\"task_button__red\":\"Todo_Task_task_button__red__P3C9B\",\"task_button__green\":\"Todo_Task_task_button__green__1yz8E\",\"task_button__yellow\":\"Todo_Task_task_button__yellow__1Bl1N\",\"hvr-push\":\"Todo_Task_hvr-push__1_OCu\",\"task_done\":\"Todo_Task_task_done__1FHO1\",\"task_delete\":\"Todo_Task_task_delete__1BZgk\",\"input_onblur\":\"Todo_Task_input_onblur__2zA1T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Todo_Header_header__2FXaE\",\"header_title\":\"Todo_Header_header_title__GatqN\",\"header_logo\":\"Todo_Header_header_logo__1dGfm\",\"header_logo__button\":\"Todo_Header_header_logo__button__1XpGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks_wrap\":\"Todo_Tasks_tasks_wrap__3zIuJ\",\"tasks_wrap__input\":\"Todo_Tasks_tasks_wrap__input__26o5s\",\"tasks_input\":\"Todo_Tasks_tasks_input__3Cbo6\",\"inputError\":\"Todo_Tasks_inputError__3IHks\",\"tasks_button\":\"Todo_Tasks_tasks_button__xway9\",\"hvr-push\":\"Todo_Tasks_hvr-push__2bA4G\",\"tasks_item\":\"Todo_Tasks_tasks_item__2QyiK\",\"task_title\":\"Todo_Tasks_task_title__uKZ_h\",\"tasks_title__wrap\":\"Todo_Tasks_tasks_title__wrap__nL5N8\",\"liquid\":\"Todo_Tasks_liquid__j1xHQ\",\"liquid_red\":\"Todo_Tasks_liquid_red__2NJF3\",\"liquid_green\":\"Todo_Tasks_liquid_green__3Clj2\",\"liquid_yellow\":\"Todo_Tasks_liquid_yellow__IEooR\",\"float\":\"Todo_Tasks_float__30N8B\",\"task_buttons\":\"Todo_Tasks_task_buttons__30mng\",\"task_button__red\":\"Todo_Tasks_task_button__red__3y3q3\",\"task_button__green\":\"Todo_Tasks_task_button__green__fCMZ9\",\"task_button__yellow\":\"Todo_Tasks_task_button__yellow__2Nk4a\",\"task_done\":\"Todo_Tasks_task_done__23Gw7\",\"task_delete\":\"Todo_Tasks_task_delete__shR_d\"};"],"sourceRoot":""}